import { useEffect, useState } from 'react'\n\nexport default function PanelProfesional({ supabase }) {\n  const [user, setUser] = useState(null)\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [bookings, setBookings] = useState([])\n  const [message, setMessage] = useState('')\n\n  useEffect(() => {\n    (async ()=> {\n      const { data } = await supabase.auth.getSession()\n      setUser(data.session?.user ?? null)\n    })()\n    const { data: sub } = supabase.auth.onAuthStateChange((_ev, session) => {\n      setUser(session?.user ?? null)\n    })\n    return ()=> sub.subscription.unsubscribe()\n  },[])\n\n  useEffect(()=> { if(user) fetchBookings() }, [user])\n\n  async function handleLogin(e) {\n    e?.preventDefault()\n    setMessage('')\n    const res = await supabase.auth.signInWithPassword({ email, password })\n    if(res.error) setMessage('Error: '+res.error.message)\n    else setMessage('Sesión iniciada')\n  }\n\n  async function fetchBookings() {\n    setMessage('Cargando...')\n    const { data, error } = await supabase.from('bookings').select('id, client_name, client_contact, service_id, time, status').eq('professional_id', user?.id).order('time', {ascending:true})\n    if (error) setMessage('Error: '+error.message)\n    else {\n      const servicesRes = await supabase.from('services').select('id,name')\n      const servicesMap = (servicesRes.data||[]).reduce((acc,s)=> (acc[s.id]=s.name, acc), {})\n      const enriched = (data||[]).map(b => ({...b, service_name: servicesMap[b.service_id]||b.service_id}))\n      setBookings(enriched)\n      setMessage('')\n    }\n  }\n\n  async function confirmBooking(id) {\n    const { error } = await supabase.from('bookings').update({status:'CONFIRMADO'}).eq('id', id)\n    if (error) setMessage('Error: '+error.message)\n    else fetchBookings()\n  }\n\n  if (!user) return (\n    <div>\n      <h2>Panel Profesional — Login</h2>\n      <form onSubmit={handleLogin} style={{ display:'grid', gap:8, maxWidth:420 }}>\n        <input placeholder="Correo" value={email} onChange={e=> setEmail(e.target.value)} type="email" required />\n        <input placeholder="Contraseña" value={password} onChange={e=> setPassword(e.target.value)} type="password" required />\n        <div style={{ display:'flex', gap:8 }}><button type="submit">Entrar</button></div>\n      </form>\n      {message && <div className="notice">{message}</div>}\n    </div>\n  )\n\n  return (\n    <div>\n      <h2>Panel Profesional</h2>\n      <div style={{ marginBottom:12 }}><strong>{user.email}</strong></div>\n      <button onClick={()=> supabase.auth.signOut().then(()=> setUser(null))}>Cerrar sesión</button>\n      <div style={{ marginTop:16 }}>\n        <h3>Tus citas</h3>\n        {message && <div className="notice">{message}</div>}\n        {bookings.length===0 ? <p>No tienes citas.</p> : (\n          <table className="table">\n            <thead><tr><th>Cliente</th><th>Contacto</th><th>Servicio</th><th>Hora</th><th>Estado</th><th></th></tr></thead>\n            <tbody>\n              {bookings.map(b=> (\n                <tr key={b.id}><td>{b.client_name}</td><td>{b.client_contact}</td><td>{b.service_name}</td><td>{new Date(b.time).toLocaleString()}</td><td>{b.status}</td><td>{b.status==='PENDIENTE' && <button onClick={()=> confirmBooking(b.id)}>Confirmar</button>}</td></tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  )\n}\n